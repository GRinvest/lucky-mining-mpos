  <div class="row">
    <div class="col-lg-12">
      <div class="panel panel-info">
        <div class="panel-heading">
          <i class="fa fa-info fa-fw"></i><span class="abouta6">Frequently Asked Questions</span>
        </div>
        <div class="panel-body">
          <ul>
          <li><b><i>Q: <span class="abouta7">When will I get paid?</span></b></i></li>
          &nbsp;<b>A:</b> <span class="abouta8">This pool uses the following payout system.</span><br>
          {if $GLOBAL.config.payout_system == 'prop'}
          <br>
          <b><span class="abouta9">Proportional (Prop)</span></b> <span class="aboutb1">- The block reward is distributed among miners in proportion to the number of shares they submitted in a round. The expected reward per share depends on the number of shares already submitted in the round.</span>
          {/if}
          {if $GLOBAL.config.payout_system == 'pplns'}
          <br>
          <b><span class="aboutb2">Pay Per Last N Shares (PPLNS)</span></b> <span class="aboutb3">- Block rewards are distributed among the last shares, disregarding round boundaries. In the accurate implementation, the number of shares is determined so that their total will be a specified quantity of score (where the score of a share is the inverse of the difficulty). Most pools use a naive implementation based on a fixed number of shares or a fixed multiple of the difficulty. The share-variance can be reduced at the cost of increased maturity time, but there is no way to decrease the long-term pool-variance.</span>
          {/if}
          {if $GLOBAL.config.payout_system == 'pps'}
          <br>
          <b><span class="aboutb4">Pay Per Share (PPS)</span></b> <span class="aboutb5">- Each share receives a fixed reward known in advance. This is the ultimate low-variance, low-maturity simple method, but has the highest risk for the operator, and hence lower expected returns than other methods and risk of collapse if not managed properly.</span>
          {/if}
          <br><br>
          <li><b><i>Q: <span class="aboutd1">What is a orphan block?</span></b></i></li>
          &nbsp;<b>A:</b> <span class="aboutd2">Coins generated by a block will not be available to you right away. They will take some time to be confirmed by the entire network before you are allowed to transfer them out of the pool. Usually coins have a confirmation set to 120. What that actually means: the network (not the pool) has to discover 120 additional blocks on top of the one found by the pool to confirm it.</span>
          <br><br>
          <li><b><i>Q: <span class="aboutb6">What is estimated payout?</span></b></i></li>
          &nbsp;<b>A:</b> <span class="aboutb7">Estimated payout is your estimated payout if a block is found at that time. This is an estimate according to your amount of shares submitted for the round(s).</span>
          <br><br>
          {if $GLOBAL.config.payout_system != 'prop'}
          <li><b><i>Q: <span class="aboutb8">What is pool-variance?</span></b></i></li>
          &nbsp;<b>A:</b> <span class="aboutb9">This is the variance caused by the pool being too small. Using a method with high pool-variance does no harm to large pools.</span>
          <br><br>
          {/if}
          <li><b><i>Q: <span class="aboutc1">What is a share?</span></b></i></li>
          &nbsp;<b>A:</b> <span class="aboutc2">Finding blocks is not an easy task. Since it would take a really long time on some coins, finding a block is broken down into shares. Depending on the server side setting, each share can be a certain difficulty. The more difficult each share is to find by miners, the fewer total shares are required to eventually find a block.</span>
          <br><br>
          <span class="aboutc3">On the server side, each share is checked against the coin daemon (a server side wallet with more features) if it is indeed a valid block solution. Every share computed has the potential to be a block solution. I will not go into details why this is, but rest assured that share estimates for blocks can sometimes be exceeded. In the long run though, shorter round with less shares than required will make up for those taking very long.</span>
          <br><br>
          <span class="aboutc4">Keep in mind: shares are not blocks! Shares are part of a block and will count towards the block payout!</span>
          <br><br>
          <span class="aboutc5">At times, you will see shares being rejected by the pool. This can happen if you try to send an outdated share right after a block was found. Stratum, a protocol used by a miner to request work from a server, is used for share submission and getting new work. It is very solid when it comes to avoiding rejects but they can still happen once in a while.</span>
          <br><br>
          <span class="aboutc6">If you are seeing reject all the time, then something isnâ€™t working right on your end. You may also notice that your hashrate on the pool website is not increasing while your invalid share count keeps climbing up. In that case turn off your miner and check your settings!</span>
          <br><br>
          <li><b><i>Q: <span class="aboutc7">I am having problems connecting to the pool.</span></b></i></li>
          &nbsp;<b>A:</b> <span class="aboutc8">Double check your settings against our</span> <a href="{$smarty.server.SCRIPT_NAME}?page=gettingstarted"><span class="aboutc9">getting started page.</span></a>
          </ul>
        </div>
        <div class="panel-footer">
          <h6><span class="aboutd3">This Pool is running <a href="https://github.com/TheSerapher/php-mpos">MPOS</a> <span class="aboutd4">project code. This frontend was created by</span> <a href="https://github.com/MPOS/php-mpos"TheSerapher aka Sebastian Grewe</a>. <span class="aboutd5">The operation of the pool is soley at the hand of your trusted pool operator.</span></h6>
        </div>
      </div>
    </div>
  </div>

